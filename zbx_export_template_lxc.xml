<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>7.4</version>
    <template_groups>
        <template_group>
            <uuid>846977d1dfed4968bc5f8bdb363285bc</uuid>
            <name>Templates/Operating systems</name>
        </template_group>
    </template_groups>
    <templates>
        <template>
            <uuid>2c8f02a86af5441e84870d74bf3a998e</uuid>
            <template>Template Linux Container</template>
            <name>Template Linux Container</name>
            <description>This is an official Linux template. It requires Zabbix agent 7.4 or newer.

Notes on filesystem (FS) discovery:
- The ext4/3/2 filesystem reserves space for privileged usage, typically set at 5% by default.
- BTRFS allocates a default of 10% of the volume for its own needs.
- To mitigate potential disasters, FS usage triggers are based on the maximum available space.
  - Utilization formula: 'pused = 100 - 100 * (available / total - free + available)'
- The FS utilization chart, derived from graph prototypes, reflects FS reserved space as the difference between used and available space from the total volume.

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/387225-discussion-thread-for-official-zabbix-template-for-linux

Generated by official Zabbix template tool &quot;Templator&quot;</description>
            <readme>## Overview

This is an official Linux template. It requires Zabbix agent 7.4 or newer.

#### Notes on filesystem (FS) discovery:
- The ext4/3/2 FS reserves space for privileged usage, typically set at 5% by default.
- BTRFS allocates a default of 10% of the volume for its own needs.
- To mitigate potential disasters, FS usage triggers are based on the maximum available space.
  - Utilization formula: `pused = 100 - 100 * (available / total - free + available)`
- The FS utilization chart, derived from graph prototypes, reflects FS reserved space as the difference between used and available space from the total volume.</readme>
            <groups>
                <group>
                    <name>Templates/Operating systems</name>
                </group>
            </groups>
            <items>
                <item>
                    <uuid>aa995af3d771477c853813d1fcb57de1</uuid>
                    <name>Host name of Zabbix agent running</name>
                    <key>agent.hostname</key>
                    <delay>1h</delay>
                    <value_type>CHAR</value_type>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>e485719e424b470bb4d22b7c02cb39ab</uuid>
                    <name>Zabbix agent ping</name>
                    <key>agent.ping</key>
                    <description>The agent always returns &quot;1&quot; for this item. May be used in combination with `nodata()` for the availability check.</description>
                    <valuemap>
                        <name>Zabbix agent ping status</name>
                    </valuemap>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>ddb61e95d4964e028137e4c20038bf25</uuid>
                    <name>Version of Zabbix agent running</name>
                    <key>agent.version</key>
                    <delay>1h</delay>
                    <value_type>CHAR</value_type>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>application</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>079a95714c6d402bb7a410106e9816ff</uuid>
                    <name>Load average (1m avg)</name>
                    <key>ct.cpu.load[all,avg1]</key>
                    <value_type>FLOAT</value_type>
                    <description>Calculated as the system CPU load divided by the number of CPU cores.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>057baa585b7a4b10b65a655fc38a8333</uuid>
                    <name>Load average (5m avg)</name>
                    <key>ct.cpu.load[all,avg5]</key>
                    <value_type>FLOAT</value_type>
                    <description>Calculated as the system CPU load divided by the number of CPU cores.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>308b87b7d2f541cf89c493e195d1cfed</uuid>
                    <name>Load average (15m avg)</name>
                    <key>ct.cpu.load[all,avg15]</key>
                    <value_type>FLOAT</value_type>
                    <description>Calculated as the system CPU load divided by the number of CPU cores.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>0e3cd528a3c445e3a72e7d500b1a7399</uuid>
                    <name>Available memory</name>
                    <key>ct.memory.size[available]</key>
                    <units>B</units>
                    <description>The available memory:
- in Linux = free + buffers + cache;
- on other platforms calculation may vary.

See also Appendixes in Zabbix Documentation about parameters of the `vm.memory.size` item.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>fbe6da95abfc4a2bae3903e9d1e61923</uuid>
                    <name>Available memory in %</name>
                    <key>ct.memory.size[pavailable]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>The available memory as percentage of the total. See also Appendixes in Zabbix Documentation about parameters of the `vm.memory.size` item.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>69dfe76ae548497ba0c72ad323faedb0</uuid>
                    <name>Memory utilization</name>
                    <type>DEPENDENT</type>
                    <key>ct.memory.size[pused]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>The percentage of used memory is calculated as `100-pavailable`.</description>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <parameters>
                                <parameter>return (100-value);</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>ct.memory.size[pavailable]</key>
                    </master_item>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>90bb0fac5bbd4909af6904bb80b991d9</uuid>
                            <expression>min(/Template Linux Container/ct.memory.size[pused],5m)&gt;{$MEMORY.UTIL.MAX}</expression>
                            <name>Linux: High memory utilization</name>
                            <event_name>Linux: High memory utilization (&gt;{$MEMORY.UTIL.MAX}% for 5m)</event_name>
                            <priority>AVERAGE</priority>
                            <description>The system is running out of free memory.</description>
                            <dependencies>
                                <dependency>
                                    <name>Linux: Lack of available memory</name>
                                    <expression>max(/Template Linux Container/ct.memory.size[available],5m)&lt;{$MEMORY.AVAILABLE.MIN} and last(/Template Linux Container/ct.memory.size[total])&gt;0</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>capacity</value>
                                </tag>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>d4a0529393d8449fadeb7cd2e068acd2</uuid>
                    <name>Total memory</name>
                    <key>ct.memory.size[total]</key>
                    <units>B</units>
                    <description>Total memory expressed in bytes.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>d1a8c82b92144260ac73f3a817c44b55</uuid>
                    <name>Free swap space</name>
                    <key>ct.swap.size</key>
                    <units>B</units>
                    <description>The free space of the swap volume/file expressed in bytes.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                        <tag>
                            <tag>component</tag>
                            <value>storage</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>1dd16d0a5cea4d2b82eb69801dfd23a0</uuid>
                    <name>Free swap space in %</name>
                    <key>ct.swap.size[pfree]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>The free space of the swap volume/file expressed in %.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                        <tag>
                            <tag>component</tag>
                            <value>storage</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>84642e0e69464b899126fca456247aa2</uuid>
                    <name>Total swap space</name>
                    <key>ct.swap.size[total]</key>
                    <units>B</units>
                    <description>The total space of the swap volume/file expressed in bytes.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                        <tag>
                            <tag>component</tag>
                            <value>storage</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>3aa55cd9502745099b0cbcaf055dd831</uuid>
                    <name>Maximum number of open file descriptors</name>
                    <key>kernel.maxfiles</key>
                    <delay>1h</delay>
                    <description>May be increased by using the `sysctl` utility or modifying the file `/etc/sysctl.conf`.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>f26ffe033bed483eb7d96ca31f43c900</uuid>
                            <expression>last(/Template Linux Container/kernel.maxfiles)&lt;{$KERNEL.MAXFILES.MIN}</expression>
                            <name>Linux: Configured max number of open filedescriptors is too low</name>
                            <event_name>Linux: Configured max number of open filedescriptors is too low (&lt; {$KERNEL.MAXFILES.MIN})</event_name>
                            <priority>INFO</priority>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>c5962d7b88a046a28d5f413a228d63fb</uuid>
                    <name>Maximum number of processes</name>
                    <key>kernel.maxproc</key>
                    <delay>1h</delay>
                    <description>May be increased by using the `sysctl` utility or modifying the file `/etc/sysctl.conf`.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>ecb90a2929a94050ae9db07b4b9082d6</uuid>
                            <expression>last(/Template Linux Container/kernel.maxproc)&lt;{$KERNEL.MAXPROC.MIN}</expression>
                            <name>Linux: Configured max number of processes is too low</name>
                            <event_name>Linux: Configured max number of processes is too low (&lt; {$KERNEL.MAXPROC.MIN})</event_name>
                            <priority>INFO</priority>
                            <dependencies>
                                <dependency>
                                    <name>Linux: Getting closer to process limit</name>
                                    <expression>last(/Template Linux Container/proc.num)/last(/Template Linux Container/kernel.maxproc)*100&gt;80</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>4574ba27a5e74509b549d1018b16bcef</uuid>
                    <name>Number of processes</name>
                    <key>proc.num</key>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>a4ef9110ab0c42ffbce515d450b01d7c</uuid>
                    <name>Number of running processes</name>
                    <key>proc.num[,,run]</key>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>8923e452e3a440fd966397651beda211</uuid>
                    <name>System boot time</name>
                    <key>system.boottime</key>
                    <delay>15m</delay>
                    <units>unixtime</units>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>153fd020f9764a488f1f52854b2b8028</uuid>
                    <name>Interrupts per second</name>
                    <key>system.cpu.intr</key>
                    <value_type>FLOAT</value_type>
                    <description>Number of interrupts processed.</description>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>2961f89e0a894d57aeb095aac8044589</uuid>
                    <name>Number of CPUs</name>
                    <key>system.cpu.num</key>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>84cc4fe56ab44f38a0b6a917b2e85be9</uuid>
                    <name>Context switches per second</name>
                    <key>system.cpu.switches</key>
                    <value_type>FLOAT</value_type>
                    <description>The combined rate at which all processors on the computer are switched from one thread to another.</description>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>16d0a94d53e043228248895fac2df702</uuid>
                    <name>CPU utilization</name>
                    <type>DEPENDENT</type>
                    <key>system.cpu.util</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>CPU utilization expressed in %.</description>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <parameters>
                                <parameter>return (100 - value)</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>system.cpu.util[,idle]</key>
                    </master_item>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>0cb99348a8184d40a03479d2564a8037</uuid>
                            <expression>min(/Template Linux Container/system.cpu.util,5m)&gt;{$CPU.UTIL.CRIT}</expression>
                            <name>Linux: High CPU utilization</name>
                            <event_name>Linux: High CPU utilization (over {$CPU.UTIL.CRIT}% for 5m)</event_name>
                            <opdata>Current utilization: {ITEM.LASTVALUE1}</opdata>
                            <priority>WARNING</priority>
                            <description>CPU utilization is too high. The system might be slow to respond.</description>
                            <dependencies>
                                <dependency>
                                    <name>Linux: Load average is too high</name>
                                    <expression>min(/Template Linux Container/ct.cpu.load[all,avg1],5m)/last(/Template Linux Container/system.cpu.num)&gt;{$LOAD_AVG_PER_CPU.MAX.WARN}
and last(/Template Linux Container/ct.cpu.load[all,avg5])&gt;0
and last(/Template Linux Container/ct.cpu.load[all,avg15])&gt;0</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>1a003ce28c4545ce81416ab3fe88019f</uuid>
                    <name>CPU guest time</name>
                    <key>system.cpu.util[,guest]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time spent on running a virtual CPU for a guest operating system.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>136c7b7fe90945b78f2d595c4bedfc67</uuid>
                    <name>CPU guest nice time</name>
                    <key>system.cpu.util[,guest_nice]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time spent on running a niced guest (a virtual CPU for guest operating systems under the control of the Linux kernel).</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>84e03cdc44cf470bbdb4bd80e9ddb907</uuid>
                    <name>CPU idle time</name>
                    <key>system.cpu.util[,idle]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time the CPU has spent doing nothing.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>8d6b768874534471ae1f6b15829f7699</uuid>
                    <name>CPU interrupt time</name>
                    <key>system.cpu.util[,interrupt]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time the CPU has spent servicing hardware interrupts.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>941a118246ff4e31ba82dcd476ed6052</uuid>
                    <name>CPU iowait time</name>
                    <key>system.cpu.util[,iowait]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time the CPU has been waiting for I/O to complete.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>96a914795cfe4bf69dcce2853c8d45d8</uuid>
                    <name>CPU nice time</name>
                    <key>system.cpu.util[,nice]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time the CPU has spent running users' processes that have been niced.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>379ee31be2e94e01a485215f1a95e496</uuid>
                    <name>CPU softirq time</name>
                    <key>system.cpu.util[,softirq]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time the CPU has been servicing software interrupts.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>ae9bf66d2e0543ad955a0a267db0ee6a</uuid>
                    <name>CPU steal time</name>
                    <key>system.cpu.util[,steal]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>The amount of &quot;stolen&quot; CPU from this virtual machine by the hypervisor for other tasks, such as running another virtual machine.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>a0896b884a66456282e3f8ebee1a206c</uuid>
                    <name>CPU system time</name>
                    <key>system.cpu.util[,system]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time the CPU has spent running the kernel and its processes.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>3fc9419c04754428a35d1e8d9784460e</uuid>
                    <name>CPU user time</name>
                    <key>system.cpu.util[,user]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time the CPU has spent running users' processes that are not niced.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>009106b516c1488ea3777a3fe89de169</uuid>
                    <name>System name</name>
                    <key>system.hostname</key>
                    <delay>1h</delay>
                    <value_type>CHAR</value_type>
                    <description>The host name of the system.</description>
                    <inventory_link>NAME</inventory_link>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>12h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>5230e1b8ce974bef9635220fa8a4b4b3</uuid>
                            <expression>change(/Template Linux Container/system.hostname) and length(last(/Template Linux Container/system.hostname))&gt;0</expression>
                            <name>Linux: System name has changed</name>
                            <event_name>Linux: System name has changed (new name: {ITEM.VALUE})</event_name>
                            <priority>INFO</priority>
                            <description>The name of the system has changed. Acknowledge to close the problem manually.</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>notice</value>
                                </tag>
                                <tag>
                                    <tag>scope</tag>
                                    <value>security</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>ce54f9dbc6a24d6799337005be74bef2</uuid>
                    <name>System local time</name>
                    <key>system.localtime</key>
                    <units>unixtime</units>
                    <description>The local system time of the host.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>8fe519642bc74437a974df1ff0f0f1d7</uuid>
                            <expression>fuzzytime(/Template Linux Container/system.localtime,{$SYSTEM.FUZZYTIME.MAX})=0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>fuzzytime(/Template Linux Container/system.localtime,{$SYSTEM.FUZZYTIME.MIN})=1</recovery_expression>
                            <name>Linux: System time is out of sync</name>
                            <event_name>Linux: System time is out of sync (diff with Zabbix server &gt; {$SYSTEM.FUZZYTIME.MAX})</event_name>
                            <priority>WARNING</priority>
                            <description>The host's system time is different from Zabbix server time.</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>availability</value>
                                </tag>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>f9cef9e9a7cb4ffc8448f936dae1d7df</uuid>
                    <name>Operating system architecture</name>
                    <key>system.sw.arch</key>
                    <delay>1h</delay>
                    <value_type>CHAR</value_type>
                    <description>The architecture of the operating system.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>os</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>09c23f9b404e4beb9f37f9a611df2351</uuid>
                    <name>Operating system</name>
                    <key>system.sw.os</key>
                    <delay>1h</delay>
                    <value_type>CHAR</value_type>
                    <inventory_link>OS</inventory_link>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>os</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>61e453c4386549878eb17348def4959d</uuid>
                            <expression>change(/Template Linux Container/system.sw.os) and length(last(/Template Linux Container/system.sw.os))&gt;0</expression>
                            <name>Linux: Operating system description has changed</name>
                            <priority>INFO</priority>
                            <description>The description of the operating system has changed. Possible reasons are that the system has been updated or replaced. Acknowledge to close the problem manually.</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Linux: System name has changed</name>
                                    <expression>change(/Template Linux Container/system.hostname) and length(last(/Template Linux Container/system.hostname))&gt;0</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>notice</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>d72860aca941437284a746ab0a8f17f0</uuid>
                    <name>Number of installed packages</name>
                    <key>system.sw.packages.get</key>
                    <delay>1h</delay>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$.length()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>12h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>os</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>7c71ce1ee4e149c68d5d9b0a537dc6a0</uuid>
                            <expression>change(/Template Linux Container/system.sw.packages.get)&lt;&gt;0</expression>
                            <name>Linux: Number of installed packages has been changed</name>
                            <priority>WARNING</priority>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>notice</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>fbe4fb3e8cf340988ad6b523d02431d8</uuid>
                    <name>System description</name>
                    <key>system.uname</key>
                    <delay>15m</delay>
                    <value_type>CHAR</value_type>
                    <description>The information as normally returned by `uname -a`.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>12h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>3a13c81a2f414f7ca56993b8552b9dd6</uuid>
                    <name>System uptime</name>
                    <key>system.uptime</key>
                    <delay>30s</delay>
                    <trends>0</trends>
                    <units>uptime</units>
                    <description>The system uptime expressed in the following format: &quot;N days, hh:mm:ss&quot;.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>86f76e4f4d104db289c181c8bae7d08a</uuid>
                            <expression>last(/Template Linux Container/system.uptime)&lt;10m</expression>
                            <name>Linux: {HOST.NAME} has been restarted</name>
                            <event_name>Linux: {HOST.NAME} has been restarted (uptime &lt; 10m)</event_name>
                            <priority>WARNING</priority>
                            <description>The host uptime is less than 10 minutes.</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>notice</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>edb823911045429394b33551c88a5ba7</uuid>
                    <name>Number of logged in users</name>
                    <key>system.users.num</key>
                    <description>The number of users who are currently logged in.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>environment</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>f98d0ddf9b114ab2b15f3bb8c782cc4d</uuid>
                    <name>Checksum of /etc/passwd</name>
                    <key>vfs.file.cksum[/etc/passwd,sha256]</key>
                    <delay>15m</delay>
                    <value_type>CHAR</value_type>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>security</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>163fd678d0e2448594766a6bf679bf1b</uuid>
                            <expression>last(/Template Linux Container/vfs.file.cksum[/etc/passwd,sha256],#1)&lt;&gt;last(/Template Linux Container/vfs.file.cksum[/etc/passwd,sha256],#2)</expression>
                            <name>Linux: /etc/passwd has been changed</name>
                            <priority>INFO</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Linux: Operating system description has changed</name>
                                    <expression>change(/Template Linux Container/system.sw.os) and length(last(/Template Linux Container/system.sw.os))&gt;0</expression>
                                </dependency>
                                <dependency>
                                    <name>Linux: System name has changed</name>
                                    <expression>change(/Template Linux Container/system.hostname) and length(last(/Template Linux Container/system.hostname))&gt;0</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>security</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>f97c4213528e4d89b10a5fe811e4b68f</uuid>
                    <name>Get filesystems</name>
                    <key>vfs.fs.get</key>
                    <history>0</history>
                    <value_type>TEXT</value_type>
                    <description>The `vfs.fs.get` key acquires raw information set about the filesystems. Later to be extracted by preprocessing in dependent items.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>raw</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>6da5a521cc5c4ef58fd985716b731aee</uuid>
                    <name>Zabbix agent availability</name>
                    <type>INTERNAL</type>
                    <key>zabbix[host,agent,available]</key>
                    <description>Used for monitoring the availability status of the agent.</description>
                    <valuemap>
                        <name>zabbix.host.available</name>
                    </valuemap>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>7333a70725cd4a5ab707a00bafde07d8</uuid>
                            <expression>max(/Template Linux Container/zabbix[host,agent,available],{$AGENT.TIMEOUT})=0</expression>
                            <name>Linux: Zabbix agent is not available</name>
                            <event_name>Linux: Zabbix agent is not available (for {$AGENT.TIMEOUT})</event_name>
                            <priority>AVERAGE</priority>
                            <description>For passive agents only, host availability is used with `{$AGENT.TIMEOUT}` as a time threshold.</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>availability</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <uuid>58c35591a6b2436dbe1aea4fa235e444</uuid>
                    <name>Network interface discovery</name>
                    <key>net.if.discovery</key>
                    <delay>1h</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#IFNAME}</macro>
                                <value>{$NET.IF.IFNAME.MATCHES}</value>
                            </condition>
                            <condition>
                                <macro>{#IFNAME}</macro>
                                <value>{$NET.IF.IFNAME.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                            </condition>
                        </conditions>
                    </filter>
                    <description>The discovery of network interfaces.</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>aafe381caa3c4c77be57d70e0c73eb59</uuid>
                            <name>Interface {#IFNAME}: Inbound packets discarded</name>
                            <key>net.if.in[&quot;{#IFNAME}&quot;,dropped]</key>
                            <delay>3m</delay>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>6a4e232c6ed04be8b1f79c7d91656e1a</uuid>
                            <name>Interface {#IFNAME}: Inbound packets with errors</name>
                            <key>net.if.in[&quot;{#IFNAME}&quot;,errors]</key>
                            <delay>3m</delay>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>fa78a5c11e7f4a878c01b0ff2efde01a</uuid>
                            <name>Interface {#IFNAME}: Bits received</name>
                            <key>net.if.in[&quot;{#IFNAME}&quot;]</key>
                            <delay>3m</delay>
                            <units>bps</units>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>8</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>106da8ea05ef4209b36ce2ad60e48ef3</uuid>
                            <name>Interface {#IFNAME}: Outbound packets discarded</name>
                            <key>net.if.out[&quot;{#IFNAME}&quot;,dropped]</key>
                            <delay>3m</delay>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>e96d7dc913624fbc8e1610c840cf541b</uuid>
                            <name>Interface {#IFNAME}: Outbound packets with errors</name>
                            <key>net.if.out[&quot;{#IFNAME}&quot;,errors]</key>
                            <delay>3m</delay>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>6c7392cccbd84fd8a9d6e4a13957c788</uuid>
                            <name>Interface {#IFNAME}: Bits sent</name>
                            <key>net.if.out[&quot;{#IFNAME}&quot;]</key>
                            <delay>3m</delay>
                            <units>bps</units>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>8</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>d08250bd835542ebbfba48511527f291</uuid>
                            <name>Interface {#IFNAME}: Operational status</name>
                            <key>vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;]</key>
                            <trends>0</trends>
                            <description>Reference: https://www.kernel.org/doc/Documentation/networking/operstates.txt</description>
                            <valuemap>
                                <name>ifOperStatus</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <parameters>
                                        <parameter>var newvalue;
switch(value) {
  case &quot;unknown&quot;:
	newvalue = 0;
	break;
  case &quot;notpresent&quot;:
	newvalue = 1;
	break;
  case &quot;down&quot;:
	newvalue = 2;
	break;
  case &quot;lowerlayerdown&quot;:
	newvalue = 3;
	break;
  case &quot;testing&quot;:
	newvalue = 4;
	break;
  case &quot;dormant&quot;:
	newvalue = 5;
	break;
  case &quot;up&quot;:
	newvalue = 6;
	break;  default:
	newvalue = &quot;Problem parsing interface operstate in JS&quot;;
}
return newvalue;</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>8b9b8602f76e4bfda83fd89804f6d7a0</uuid>
                                    <expression>{$IFCONTROL:&quot;{#IFNAME}&quot;}=1 and last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])=2 and (last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#1)&lt;&gt;last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#2))</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])&lt;&gt;2 or {$IFCONTROL:&quot;{#IFNAME}&quot;}=0</recovery_expression>
                                    <name>Linux: Interface {#IFNAME}: Link down</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>This trigger expression works as follows:
1. It can be triggered if the operations status is down.
2. `{$IFCONTROL:&quot;{#IFNAME}&quot;}=1` - a user can redefine the context macro to &quot;0&quot;, marking this interface as not important. No new trigger will be fired if this interface is down.
3. `last(/TEMPLATE_NAME/METRIC,#1)&lt;&gt;last(/TEMPLATE_NAME/METRIC,#2)` - the trigger fires only if the operational status was up to (1) sometime before (so, does not fire for &quot;eternal off&quot; interfaces.)

WARNING: if closed manually - it will not fire again on the next poll, because of .diff.</description>
                                    <manual_close>YES</manual_close>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>availability</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <uuid>00bc6db90e6c4725bd4f3aa9decd7423</uuid>
                            <name>Interface {#IFNAME}: Speed</name>
                            <key>vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;]</key>
                            <delay>5m</delay>
                            <trends>0</trends>
                            <units>bps</units>
                            <description>It indicates the latest or current speed value of the interface. The value is an integer representing the link speed expressed in bits/sec.
This attribute is only valid for the interfaces that implement the ethtool `get_link_ksettings` method (mostly Ethernet).

Reference: https://www.kernel.org/doc/Documentation/ABI/testing/sysfs-class-net</description>
                            <preprocessing>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>1000000</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>1h</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>75a31bb957294ff8b4ca212a7d2bb2e2</uuid>
                            <name>Interface {#IFNAME}: Interface type</name>
                            <key>vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/type&quot;]</key>
                            <delay>1h</delay>
                            <trends>0</trends>
                            <description>It indicates the interface protocol type as a decimal value.
See `include/uapi/linux/if_arp.h` for all possible values.
Reference: https://www.kernel.org/doc/Documentation/ABI/testing/sysfs-class-net</description>
                            <valuemap>
                                <name>Linux::Interface protocol types</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>1d</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <uuid>334874d1b0014c26af765254b9cd293a</uuid>
                            <expression>change(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;])&lt;0 and last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;])&gt;0
and
(last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/type&quot;])=6 or last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/type&quot;])=1)
and
(last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])&lt;&gt;2)</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>(change(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;])&gt;0 and last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;],#2)&gt;0) or
(last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])=2)</recovery_expression>
                            <name>Linux: Interface {#IFNAME}: Ethernet has changed to lower speed than it was before</name>
                            <opdata>Current reported speed: {ITEM.LASTVALUE1}</opdata>
                            <priority>INFO</priority>
                            <description>This Ethernet connection has transitioned down from its known maximum speed. This might be a sign of autonegotiation issues. Acknowledge to close the problem manually.</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Linux: Interface {#IFNAME}: Link down</name>
                                    <expression>{$IFCONTROL:&quot;{#IFNAME}&quot;}=1 and last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])=2 and (last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#1)&lt;&gt;last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#2))</expression>
                                    <recovery_expression>last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])&lt;&gt;2 or {$IFCONTROL:&quot;{#IFNAME}&quot;}=0</recovery_expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                        <trigger_prototype>
                            <uuid>9bd955bcf24142778e698beada028355</uuid>
                            <expression>(avg(/Template Linux Container/net.if.in[&quot;{#IFNAME}&quot;],15m)&gt;({$IF.UTIL.MAX:&quot;{#IFNAME}&quot;}/100)*last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;]) or
avg(/Template Linux Container/net.if.out[&quot;{#IFNAME}&quot;],15m)&gt;({$IF.UTIL.MAX:&quot;{#IFNAME}&quot;}/100)*last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;])) and
last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;])&gt;0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>avg(/Template Linux Container/net.if.in[&quot;{#IFNAME}&quot;],15m)&lt;(({$IF.UTIL.MAX:&quot;{#IFNAME}&quot;}-3)/100)*last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;]) and
avg(/Template Linux Container/net.if.out[&quot;{#IFNAME}&quot;],15m)&lt;(({$IF.UTIL.MAX:&quot;{#IFNAME}&quot;}-3)/100)*last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;])</recovery_expression>
                            <name>Linux: Interface {#IFNAME}: High bandwidth usage</name>
                            <event_name>Linux: Interface {#IFNAME}: High bandwidth usage (&gt;{$IF.UTIL.MAX:&quot;{#IFNAME}&quot;}%)</event_name>
                            <opdata>In: {ITEM.LASTVALUE1}, out: {ITEM.LASTVALUE3}, speed: {ITEM.LASTVALUE2}</opdata>
                            <priority>WARNING</priority>
                            <description>The utilization of the network interface is close to its estimated maximum bandwidth.</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Linux: Interface {#IFNAME}: Link down</name>
                                    <expression>{$IFCONTROL:&quot;{#IFNAME}&quot;}=1 and last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])=2 and (last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#1)&lt;&gt;last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#2))</expression>
                                    <recovery_expression>last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])&lt;&gt;2 or {$IFCONTROL:&quot;{#IFNAME}&quot;}=0</recovery_expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                        <trigger_prototype>
                            <uuid>fd8f0696035f4927bfc7141362922c85</uuid>
                            <expression>min(/Template Linux Container/net.if.in[&quot;{#IFNAME}&quot;,errors],5m)&gt;{$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;}
or min(/Template Linux Container/net.if.out[&quot;{#IFNAME}&quot;,errors],5m)&gt;{$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;}</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>max(/Template Linux Container/net.if.in[&quot;{#IFNAME}&quot;,errors],5m)&lt;{$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;}*0.8
and max(/Template Linux Container/net.if.out[&quot;{#IFNAME}&quot;,errors],5m)&lt;{$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;}*0.8</recovery_expression>
                            <name>Linux: Interface {#IFNAME}: High error rate</name>
                            <event_name>Linux: Interface {#IFNAME}: High error rate (&gt;{$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;} for 5m)</event_name>
                            <opdata>errors in: {ITEM.LASTVALUE1}, errors out: {ITEM.LASTVALUE2}</opdata>
                            <priority>WARNING</priority>
                            <description>It recovers when it is below 80% of the `{$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;}` threshold.</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Linux: Interface {#IFNAME}: Link down</name>
                                    <expression>{$IFCONTROL:&quot;{#IFNAME}&quot;}=1 and last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])=2 and (last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#1)&lt;&gt;last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#2))</expression>
                                    <recovery_expression>last(/Template Linux Container/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])&lt;&gt;2 or {$IFCONTROL:&quot;{#IFNAME}&quot;}=0</recovery_expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>availability</value>
                                </tag>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <uuid>2681efd340ac45519547dd8ed1a3d09f</uuid>
                            <name>Interface {#IFNAME}: Network traffic</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>199C0D</color>
                                    <item>
                                        <host>Template Linux Container</host>
                                        <key>net.if.in[&quot;{#IFNAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>Template Linux Container</host>
                                        <key>net.if.out[&quot;{#IFNAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>00611C</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>Template Linux Container</host>
                                        <key>net.if.out[&quot;{#IFNAME}&quot;,errors]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <color>F7941D</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>Template Linux Container</host>
                                        <key>net.if.in[&quot;{#IFNAME}&quot;,errors]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>4</sortorder>
                                    <color>FC6EA3</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>Template Linux Container</host>
                                        <key>net.if.out[&quot;{#IFNAME}&quot;,dropped]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>5</sortorder>
                                    <color>6C59DC</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>Template Linux Container</host>
                                        <key>net.if.in[&quot;{#IFNAME}&quot;,dropped]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <uuid>cc15e09243ce419ebde6e234ec24157a</uuid>
                    <name>Block devices discovery</name>
                    <key>vfs.dev.discovery</key>
                    <delay>1h</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#DEVNAME}</macro>
                                <value>{$VFS.DEV.DEVNAME.MATCHES}</value>
                            </condition>
                            <condition>
                                <macro>{#DEVNAME}</macro>
                                <value>{$VFS.DEV.DEVNAME.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                            </condition>
                            <condition>
                                <macro>{#DEVTYPE}</macro>
                                <value>disk</value>
                            </condition>
                        </conditions>
                    </filter>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>daa570597b4f4cb3bd9dec1c0e567eb9</uuid>
                            <name>{#DEVNAME}: Disk average queue size (avgqu-sz)</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.queue_size[{#DEVNAME}]</key>
                            <value_type>FLOAT</value_type>
                            <description>The current average disk queue; the number of requests outstanding on the disk while the performance data is being collected.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$[10]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>0.001</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DEVNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>802fd95f5f564b799b3ce8e45dad3614</uuid>
                            <name>{#DEVNAME}: Disk read request avg waiting time (r_await)</name>
                            <type>CALCULATED</type>
                            <key>vfs.dev.read.await[{#DEVNAME}]</key>
                            <value_type>FLOAT</value_type>
                            <units>!ms</units>
                            <params>(last(//vfs.dev.read.time.rate[{#DEVNAME}])/(last(//vfs.dev.read.rate[{#DEVNAME}])+(last(//vfs.dev.read.rate[{#DEVNAME}])=0)))*1000*(last(//vfs.dev.read.rate[{#DEVNAME}]) &gt; 0)</params>
                            <description>This formula contains two Boolean expressions that evaluate to 1 or 0 in order to set the calculated metric to zero and to avoid the exception - division by zero.</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DEVNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>56fd6746be7c4fc5868e50baa8ef846a</uuid>
                            <name>{#DEVNAME}: Disk read rate</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.read.rate[{#DEVNAME}]</key>
                            <value_type>FLOAT</value_type>
                            <units>!r/s</units>
                            <description>r/s (read operations per second) - the number (after merges) of read requests completed per second for the device.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$[0]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DEVNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>01a5d3d30a9748268fa281a805dc9bd5</uuid>
                            <name>{#DEVNAME}: Disk read time (rate)</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.read.time.rate[{#DEVNAME}]</key>
                            <value_type>FLOAT</value_type>
                            <description>The rate of total read time counter; used in `r_await` calculation.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$[3]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>0.001</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DEVNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>be891b43622c4473895dd75c8198a295</uuid>
                            <name>{#DEVNAME}: Disk utilization</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.util[{#DEVNAME}]</key>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>The percentage of elapsed time during which the selected disk drive was busy while servicing read or write requests.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$[9]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>0.1</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DEVNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>8e5d136765884790989f5451a60e8065</uuid>
                            <name>{#DEVNAME}: Disk write request avg waiting time (w_await)</name>
                            <type>CALCULATED</type>
                            <key>vfs.dev.write.await[{#DEVNAME}]</key>
                            <value_type>FLOAT</value_type>
                            <units>!ms</units>
                            <params>(last(//vfs.dev.write.time.rate[{#DEVNAME}])/(last(//vfs.dev.write.rate[{#DEVNAME}])+(last(//vfs.dev.write.rate[{#DEVNAME}])=0)))*1000*(last(//vfs.dev.write.rate[{#DEVNAME}]) &gt; 0)</params>
                            <description>This formula contains two Boolean expressions that evaluate to 1 or 0 in order to set the calculated metric to zero and to avoid the exception - division by zero.</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DEVNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>7b2c6071c1d945f982da8a27ec20aa62</uuid>
                            <name>{#DEVNAME}: Disk write rate</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.write.rate[{#DEVNAME}]</key>
                            <value_type>FLOAT</value_type>
                            <units>!w/s</units>
                            <description>w/s (write operations per second) - the number (after merges) of write requests completed per second for the device.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$[4]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DEVNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>1db40d6f41aa4169b5f997aee8e9d4f8</uuid>
                            <name>{#DEVNAME}: Disk write time (rate)</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.write.time.rate[{#DEVNAME}]</key>
                            <value_type>FLOAT</value_type>
                            <description>The rate of total write time counter; used in `w_await` calculation.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$[7]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>0.001</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DEVNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>747df99b26a84d079542fcce4028d03b</uuid>
                            <name>{#DEVNAME}: Get stats</name>
                            <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            <history>0</history>
                            <value_type>TEXT</value_type>
                            <description>The contents of get `/sys/block/{#DEVNAME}/stat` to get the disk statistics.</description>
                            <preprocessing>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <parameters>
                                        <parameter>return JSON.stringify(value.trim().split(/ +/));</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>raw</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <uuid>bb7bf206362441f0a324310da4fd1998</uuid>
                            <expression>min(/Template Linux Container/vfs.dev.read.await[{#DEVNAME}],15m) &gt; {$VFS.DEV.READ.AWAIT.WARN:&quot;{#DEVNAME}&quot;} or min(/Template Linux Container/vfs.dev.write.await[{#DEVNAME}],15m) &gt; {$VFS.DEV.WRITE.AWAIT.WARN:&quot;{#DEVNAME}&quot;}</expression>
                            <name>Linux: {#DEVNAME}: Disk read/write request responses are too high</name>
                            <event_name>Linux: {#DEVNAME}: Disk read/write request responses are too high (read &gt; {$VFS.DEV.READ.AWAIT.WARN:&quot;{#DEVNAME}&quot;} ms for 15m or write &gt; {$VFS.DEV.WRITE.AWAIT.WARN:&quot;{#DEVNAME}&quot;} ms for 15m)</event_name>
                            <priority>WARNING</priority>
                            <description>This trigger might indicate the disk `{#DEVNAME}` saturation.</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <uuid>5d5758ae1d7945feb5d452211a000cf6</uuid>
                            <name>{#DEVNAME}: Disk average waiting time</name>
                            <graph_items>
                                <graph_item>
                                    <color>199C0D</color>
                                    <item>
                                        <host>Template Linux Container</host>
                                        <key>vfs.dev.read.await[{#DEVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>Template Linux Container</host>
                                        <key>vfs.dev.write.await[{#DEVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <uuid>a3ce6a24fddc4ca8a039cdc836f9718a</uuid>
                            <name>{#DEVNAME}: Disk read/write rates</name>
                            <graph_items>
                                <graph_item>
                                    <color>199C0D</color>
                                    <item>
                                        <host>Template Linux Container</host>
                                        <key>vfs.dev.read.rate[{#DEVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>Template Linux Container</host>
                                        <key>vfs.dev.write.rate[{#DEVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <uuid>87f76714d0a9489892577e7590ef4d43</uuid>
                            <name>{#DEVNAME}: Disk utilization and queue</name>
                            <graph_items>
                                <graph_item>
                                    <color>199C0D</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>Template Linux Container</host>
                                        <key>vfs.dev.queue_size[{#DEVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>Template Linux Container</host>
                                        <key>vfs.dev.util[{#DEVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <uuid>f16a77286f1041b48b3aec3e75ef10fa</uuid>
                    <name>Mounted filesystem discovery</name>
                    <type>DEPENDENT</type>
                    <key>vfs.fs.dependent.discovery</key>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#FSNAME}</macro>
                                <value>{$VFS.FS.FSNAME.MATCHES}</value>
                            </condition>
                            <condition>
                                <macro>{#FSNAME}</macro>
                                <value>{$VFS.FS.FSNAME.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                            </condition>
                            <condition>
                                <macro>{#FSTYPE}</macro>
                                <value>{$VFS.FS.FSTYPE.MATCHES}</value>
                            </condition>
                            <condition>
                                <macro>{#FSTYPE}</macro>
                                <value>{$VFS.FS.FSTYPE.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                            </condition>
                        </conditions>
                    </filter>
                    <description>The discovery of mounted filesystems with different types.</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>66960cb94bbd48aca3ebafe7f81d2730</uuid>
                            <name>FS [{#FSNAME}]: Inodes: Free, in %</name>
                            <type>DEPENDENT</type>
                            <key>vfs.fs.dependent.inode[{#FSNAME},pfree]</key>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>Free metadata space expressed in %.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.inodes.pfree</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.fs.dependent[{#FSNAME},data]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                                <tag>
                                    <tag>fstype</tag>
                                    <value>{#FSTYPE}</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>b00c2dc2266b4db2942dbc114e832d3d</uuid>
                                    <expression>min(/Template Linux Container/vfs.fs.dependent.inode[{#FSNAME},pfree],5m)&lt;{$VFS.FS.INODE.PFREE.MIN.CRIT:&quot;{#FSNAME}&quot;}</expression>
                                    <name>Linux: FS [{#FSNAME}]: Running out of free inodes</name>
                                    <event_name>Linux: {#FSNAME}: Running out of free inodes (free &lt; {$VFS.FS.INODE.PFREE.MIN.CRIT:&quot;{#FSNAME}&quot;}%)</event_name>
                                    <opdata>Free inodes: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>Disk writing may fail if index nodes are exhausted, leading to error messages like &quot;No space left on device&quot; or &quot;Disk is full&quot;, despite available free space.</description>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>capacity</value>
                                        </tag>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>performance</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <uuid>cf399004fc36424a8bd1523b55776c5c</uuid>
                                    <expression>min(/Template Linux Container/vfs.fs.dependent.inode[{#FSNAME},pfree],5m)&lt;{$VFS.FS.INODE.PFREE.MIN.WARN:&quot;{#FSNAME}&quot;}</expression>
                                    <name>Linux: FS [{#FSNAME}]: Running out of free inodes</name>
                                    <event_name>Linux: FS [{#FSNAME}]: Running out of free inodes (free &lt; {$VFS.FS.INODE.PFREE.MIN.WARN:&quot;{#FSNAME}&quot;}%)</event_name>
                                    <opdata>Free inodes: {ITEM.LASTVALUE1}</opdata>
                                    <priority>WARNING</priority>
                                    <description>Disk writing may fail if index nodes are exhausted, leading to error messages like &quot;No space left on device&quot; or &quot;Disk is full&quot;, despite available free space.</description>
                                    <dependencies>
                                        <dependency>
                                            <name>Linux: FS [{#FSNAME}]: Running out of free inodes</name>
                                            <expression>min(/Template Linux Container/vfs.fs.dependent.inode[{#FSNAME},pfree],5m)&lt;{$VFS.FS.INODE.PFREE.MIN.CRIT:&quot;{#FSNAME}&quot;}</expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>capacity</value>
                                        </tag>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>performance</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <uuid>5ec55c8fb1ff4d339209c0a359be6412</uuid>
                            <name>FS [{#FSNAME}]: Space: Available</name>
                            <type>DEPENDENT</type>
                            <key>vfs.fs.dependent.size[{#FSNAME},free]</key>
                            <units>B</units>
                            <description>Available storage space expressed in bytes.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.bytes.free</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.fs.dependent[{#FSNAME},data]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                                <tag>
                                    <tag>fstype</tag>
                                    <value>{#FSTYPE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>5b4b789d100b4d08bc8768df79730a90</uuid>
                            <name>FS [{#FSNAME}]: Space: Used, in %</name>
                            <type>DEPENDENT</type>
                            <key>vfs.fs.dependent.size[{#FSNAME},pused]</key>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>Calculated as the percentage of currently used space compared to the maximum available space.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.bytes.pused</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.fs.dependent[{#FSNAME},data]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                                <tag>
                                    <tag>fstype</tag>
                                    <value>{#FSTYPE}</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>b11836db3f3f4639a4a30093c1b564c3</uuid>
                                    <expression>min(/Template Linux Container/vfs.fs.dependent.size[{#FSNAME},pused],5m)&gt;{$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;}</expression>
                                    <name>Linux: FS [{#FSNAME}]: Space is critically low</name>
                                    <event_name>Linux: FS [{#FSNAME}]: Space is critically low (used &gt; {$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;}%, total {{?last(//vfs.fs.dependent.size[{#FSNAME},total])/1024/1024/1024}.fmtnum(1)}GB)</event_name>
                                    <opdata>Space used: {{ITEM.LASTVALUE1}.fmtnum(1)}%</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>The volume's space usage exceeds the `{$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;}%` limit.
The trigger expression is based on the current used and maximum available spaces.
Event name represents the total volume space, which can differ from the maximum available space, depending on the filesystem type.</description>
                                    <manual_close>YES</manual_close>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>availability</value>
                                        </tag>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>capacity</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <uuid>b86bc89c87f84252a5b7962d3d98ab01</uuid>
                                    <expression>min(/Template Linux Container/vfs.fs.dependent.size[{#FSNAME},pused],5m)&gt;{$VFS.FS.PUSED.MAX.WARN:&quot;{#FSNAME}&quot;}</expression>
                                    <name>Linux: FS [{#FSNAME}]: Space is low</name>
                                    <event_name>Linux: FS [{#FSNAME}]: Space is low (used &gt; {$VFS.FS.PUSED.MAX.WARN:&quot;{#FSNAME}&quot;}%, total {{?last(//vfs.fs.dependent.size[{#FSNAME},total])/1024/1024/1024}.fmtnum(1)}GB)</event_name>
                                    <opdata>Space used: {{ITEM.LASTVALUE1}.fmtnum(1)}%</opdata>
                                    <priority>WARNING</priority>
                                    <description>The volume's space usage exceeds the `{$VFS.FS.PUSED.MAX.WARN:&quot;{#FSNAME}&quot;}%` limit.
The trigger expression is based on the current used and maximum available spaces.
Event name represents the total volume space, which can differ from the maximum available space, depending on the filesystem type.</description>
                                    <manual_close>YES</manual_close>
                                    <dependencies>
                                        <dependency>
                                            <name>Linux: FS [{#FSNAME}]: Space is critically low</name>
                                            <expression>min(/Template Linux Container/vfs.fs.dependent.size[{#FSNAME},pused],5m)&gt;{$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;}</expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>availability</value>
                                        </tag>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>capacity</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <uuid>71128db89232458d98ece0e5009da43a</uuid>
                            <name>FS [{#FSNAME}]: Space: Total</name>
                            <type>DEPENDENT</type>
                            <key>vfs.fs.dependent.size[{#FSNAME},total]</key>
                            <units>B</units>
                            <description>Total space expressed in bytes.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.bytes.total</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.fs.dependent[{#FSNAME},data]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                                <tag>
                                    <tag>fstype</tag>
                                    <value>{#FSTYPE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>ebd19f71355d4ec589c6ec675c35eb04</uuid>
                            <name>FS [{#FSNAME}]: Space: Used</name>
                            <type>DEPENDENT</type>
                            <key>vfs.fs.dependent.size[{#FSNAME},used]</key>
                            <units>B</units>
                            <description>Used storage expressed in bytes.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.bytes.used</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.fs.dependent[{#FSNAME},data]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                                <tag>
                                    <tag>fstype</tag>
                                    <value>{#FSTYPE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>cc3f14bed40841fab2be0f515df4e38f</uuid>
                            <name>FS [{#FSNAME}]: Get data</name>
                            <type>DEPENDENT</type>
                            <key>vfs.fs.dependent[{#FSNAME},data]</key>
                            <history>1h</history>
                            <value_type>TEXT</value_type>
                            <description>Intermediate data of `{#FSNAME}` filesystem.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.[?(@.fsname=='{#FSNAME}')].first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.fs.get</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>raw</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                                <tag>
                                    <tag>fstype</tag>
                                    <value>{#FSTYPE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>1006cae573c642caa12574ad35d1d9be</uuid>
                            <name>FS [{#FSNAME}]: Option: Read-only</name>
                            <type>DEPENDENT</type>
                            <key>vfs.fs.dependent[{#FSNAME},readonly]</key>
                            <description>The filesystem is mounted as read-only. It is available only for Zabbix agents 6.4 and higher.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.options</parameter>
                                    </parameters>
                                    <error_handler>DISCARD_VALUE</error_handler>
                                </step>
                                <step>
                                    <type>REGEX</type>
                                    <parameters>
                                        <parameter>(?:^|,)ro\b</parameter>
                                        <parameter>1</parameter>
                                    </parameters>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.fs.dependent[{#FSNAME},data]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                                <tag>
                                    <tag>fstype</tag>
                                    <value>{#FSTYPE}</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>1c4848f025954f70a961d90bd6701179</uuid>
                                    <expression>last(/Template Linux Container/vfs.fs.dependent[{#FSNAME},readonly],#2)=0 and last(/Template Linux Container/vfs.fs.dependent[{#FSNAME},readonly])=1</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>last(/Template Linux Container/vfs.fs.dependent[{#FSNAME},readonly])=0</recovery_expression>
                                    <name>Linux: FS [{#FSNAME}]: Filesystem has become read-only</name>
                                    <priority>AVERAGE</priority>
                                    <description>The filesystem has become read-only, possibly due to an I/O error. Available only for Zabbix agents 6.4 and higher.</description>
                                    <manual_close>YES</manual_close>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>availability</value>
                                        </tag>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>performance</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <uuid>16380e30cc1a456b8145219cca42f9a6</uuid>
                            <name>FS [{#FSTYPE}({#FSNAME})]: Space usage graph, in % (relative to max available)</name>
                            <width>600</width>
                            <height>340</height>
                            <ymin_type_1>FIXED</ymin_type_1>
                            <ymax_type_1>FIXED</ymax_type_1>
                            <graph_items>
                                <graph_item>
                                    <drawtype>FILLED_REGION</drawtype>
                                    <color>F63100</color>
                                    <calc_fnc>ALL</calc_fnc>
                                    <item>
                                        <host>Template Linux Container</host>
                                        <key>vfs.fs.dependent.size[{#FSNAME},pused]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <uuid>34037746f97c43e58b28494df785a7f7</uuid>
                            <name>FS [{#FSTYPE}({#FSNAME})]: Space utilization chart (relative to total)</name>
                            <width>600</width>
                            <height>340</height>
                            <type>PIE</type>
                            <show_3d>YES</show_3d>
                            <graph_items>
                                <graph_item>
                                    <color>787878</color>
                                    <calc_fnc>LAST</calc_fnc>
                                    <type>GRAPH_SUM</type>
                                    <item>
                                        <host>Template Linux Container</host>
                                        <key>vfs.fs.dependent.size[{#FSNAME},total]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>F63100</color>
                                    <calc_fnc>LAST</calc_fnc>
                                    <item>
                                        <host>Template Linux Container</host>
                                        <key>vfs.fs.dependent.size[{#FSNAME},used]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>199C09</color>
                                    <calc_fnc>LAST</calc_fnc>
                                    <item>
                                        <host>Template Linux Container</host>
                                        <key>vfs.fs.dependent.size[{#FSNAME},free]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <master_item>
                        <key>vfs.fs.get</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#FSNAME}</lld_macro>
                            <path>$.fsname</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#FSTYPE}</lld_macro>
                            <path>$.fstype</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <parameters>
                                <parameter>var filesystems = JSON.parse(value);

result = filesystems.map(function (filesystem) {
	return {
		'fsname': filesystem.fsname,
		'fstype': filesystem.fstype
	};
});

return JSON.stringify(result);</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <overrides>
                        <override>
                            <name>Skip metadata collection for dynamic FS</name>
                            <step>1</step>
                            <filter>
                                <conditions>
                                    <condition>
                                        <macro>{#FSTYPE}</macro>
                                        <value>^(btrfs|zfs)$</value>
                                    </condition>
                                </conditions>
                            </filter>
                            <operations>
                                <operation>
                                    <operator>LIKE</operator>
                                    <value>Inodes</value>
                                    <discover>NO_DISCOVER</discover>
                                </operation>
                            </operations>
                        </override>
                    </overrides>
                </discovery_rule>
            </discovery_rules>
            <tags>
                <tag>
                    <tag>class</tag>
                    <value>os</value>
                </tag>
                <tag>
                    <tag>target</tag>
                    <value>linux</value>
                </tag>
            </tags>
            <macros>
                <macro>
                    <macro>{$AGENT.TIMEOUT}</macro>
                    <value>3m</value>
                    <description>Timeout after which agent is considered unavailable. Works only for agents reachable from Zabbix server/proxy (passive mode).</description>
                    <config>
                        <type>TEXT</type>
                        <priority>1</priority>
                        <label>Seconds since the last Zabbix agent seen</label>
                        <description>Timeout after which agent is considered unavailable.</description>
                    </config>
                </macro>
                <macro>
                    <macro>{$CPU.UTIL.CRIT}</macro>
                    <value>90</value>
                    <description>Critical threshold of CPU utilization expressed in %.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>2</priority>
                        <section_name>Thresholds</section_name>
                        <label>Threshold of CPU utilization expressed</label>
                        <description>Critical threshold of CPU utilization expressed in %. In the range from 0 to 100 inclusive.</description>
                        <regex>^-?([0-9]+|(([0-9]+)\.([0-9]+)))$</regex>
                    </config>
                </macro>
                <macro>
                    <macro>{$IF.ERRORS.WARN}</macro>
                    <value>2</value>
                    <description>Warning threshold of error packet rate. Can be used with interface name as context.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>21</priority>
                        <section_name>Thresholds</section_name>
                        <label>Threshold of error packet rate</label>
                        <description>Warning threshold of error packet rate. No less than 0.</description>
                        <regex>^-?([0-9]+|(([0-9]+)\.([0-9]+)))$</regex>
                    </config>
                </macro>
                <macro>
                    <macro>{$IF.UTIL.MAX}</macro>
                    <value>90</value>
                    <description>Used as a threshold in the interface utilization trigger.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>20</priority>
                        <section_name>Thresholds</section_name>
                        <label>The threshold in the interface utilization</label>
                        <description>Used as a threshold in the interface utilization trigger. In the range from 0 to 100 inclusive.</description>
                        <regex>^-?([0-9]+|(([0-9]+)\.([0-9]+)))$</regex>
                    </config>
                </macro>
                <macro>
                    <macro>{$IFCONTROL}</macro>
                    <value>1</value>
                    <description>Link status trigger will be fired only for interfaces where the context macro equals &quot;1&quot;.</description>
                    <config>
                        <type>CHECKBOX</type>
                        <priority>19</priority>
                        <label>Interfaces control</label>
                        <description>Fire a trigger when the interface operational status changes to &quot;Link down&quot;.</description>
                        <options>
                            <option>
                                <checked>1</checked>
                                <unchecked>0</unchecked>
                            </option>
                        </options>
                    </config>
                </macro>
                <macro>
                    <macro>{$KERNEL.MAXFILES.MIN}</macro>
                    <value>256</value>
                    <config>
                        <type>TEXT</type>
                        <priority>25</priority>
                        <section_name>Thresholds</section_name>
                        <label>Number of open filedescriptors</label>
                        <description>Configured max number of open filedescriptors. No less than 0.</description>
                        <regex>^-?([0-9]+|(([0-9]+)\.([0-9]+)))$</regex>
                    </config>
                </macro>
                <macro>
                    <macro>{$KERNEL.MAXPROC.MIN}</macro>
                    <value>1024</value>
                    <config>
                        <type>TEXT</type>
                        <priority>24</priority>
                        <section_name>Thresholds</section_name>
                        <label>Number of processes</label>
                        <description>Configured max number of processes. No less than 0.</description>
                        <regex>^-?([0-9]+|(([0-9]+)\.([0-9]+)))$</regex>
                    </config>
                </macro>
                <macro>
                    <macro>{$LOAD_AVG_PER_CPU.MAX.WARN}</macro>
                    <value>1.5</value>
                    <description>The CPU load per core is considered sustainable. If necessary, it can be tuned.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>3</priority>
                        <section_name>Thresholds</section_name>
                        <label>The CPU load per core</label>
                        <description>CPU load per core is considered sustainable. No less than 0.</description>
                        <regex>^-?([0-9]+|(([0-9]+)\.([0-9]+)))$</regex>
                    </config>
                </macro>
                <macro>
                    <macro>{$MEMORY.AVAILABLE.MIN}</macro>
                    <value>20M</value>
                    <description>Used as a threshold in the available memory trigger.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>13</priority>
                        <section_name>Thresholds</section_name>
                        <label>Threshold in the available memory</label>
                        <description>Used as a threshold in the available memory trigger.</description>
                    </config>
                </macro>
                <macro>
                    <macro>{$MEMORY.UTIL.MAX}</macro>
                    <value>90</value>
                    <description>Used as a threshold in the memory utilization trigger.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>12</priority>
                        <section_name>Thresholds</section_name>
                        <label>Threshold in the memory utilization</label>
                        <description>Used as a threshold in the memory utilization trigger. In the range from 0 to 100 inclusive.</description>
                        <regex>^-?([0-9]+|(([0-9]+)\.([0-9]+)))$</regex>
                    </config>
                </macro>
                <macro>
                    <macro>{$NET.IF.IFNAME.MATCHES}</macro>
                    <value>^.*$</value>
                    <description>Used for network interface discovery. Can be overridden on the host or linked template level.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>22</priority>
                        <section_name>Filters</section_name>
                        <label>Network interface discovery</label>
                        <description>Network interface discovery.</description>
                    </config>
                </macro>
                <macro>
                    <macro>{$NET.IF.IFNAME.NOT_MATCHES}</macro>
                    <value>(^Software Loopback Interface|^NULL[0-9.]*$|^[Ll]o[0-9.]*$|^[Ss]ystem$|^Nu[0-9.]*$|^veth[0-9A-z]+$|docker[0-9]+|br-[a-z0-9]{12})</value>
                    <description>Filters out `loopbacks`, `nulls`, docker `veth` links and `docker0` bridge by default.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>23</priority>
                        <section_name>Filters</section_name>
                        <label>Filter for network interface by name</label>
                        <description>Filters out `loopbacks`, `nulls`, docker `veth` links and `docker0` bridge by default.</description>
                    </config>
                </macro>
                <macro>
                    <macro>{$SWAP.PFREE.MIN.WARN}</macro>
                    <value>50</value>
                    <description>The warning threshold of the minimum free swap.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>14</priority>
                        <section_name>Thresholds</section_name>
                        <label>Threshold of the minimum free swap</label>
                        <description>Warning threshold of the minimum free swap. In the range from 0 to 100 inclusive.</description>
                        <regex>^-?([0-9]+|(([0-9]+)\.([0-9]+)))$</regex>
                    </config>
                </macro>
                <macro>
                    <macro>{$SYSTEM.FUZZYTIME.MAX}</macro>
                    <value>60s</value>
                    <description>The upper threshold for difference of system time.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>27</priority>
                        <section_name>Thresholds</section_name>
                        <label>The upper threshold for difference of system time</label>
                        <description>Upper threshold for difference of system time.</description>
                    </config>
                </macro>
                <macro>
                    <macro>{$SYSTEM.FUZZYTIME.MIN}</macro>
                    <value>10s</value>
                    <description>The lower threshold for difference of system time. Used in recovery expression to avoid trigger flapping.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>26</priority>
                        <section_name>Thresholds</section_name>
                        <label>The lower threshold for difference of system time</label>
                        <description>Lower threshold for difference of system time.</description>
                    </config>
                </macro>
                <macro>
                    <macro>{$VFS.DEV.DEVNAME.MATCHES}</macro>
                    <value>.+</value>
                    <description>Used for block device discovery. Can be overridden on the host or linked template level.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>17</priority>
                        <section_name>Filters</section_name>
                        <label>Filter for block device discovery</label>
                        <description>Regex string to include discovered block device.</description>
                    </config>
                </macro>
                <macro>
                    <macro>{$VFS.DEV.DEVNAME.NOT_MATCHES}</macro>
                    <value>^(loop[0-9]*|sd[a-z][0-9]+|nbd[0-9]+|sr[0-9]+|fd[0-9]+|dm-[0-9]+|ram[0-9]+|ploop[a-z0-9]+|md[0-9]*|hcp[0-9]*|zram[0-9]*)</value>
                    <description>Used for block device discovery. Can be overridden on the host or linked template level.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>18</priority>
                        <section_name>Filters</section_name>
                        <label>Filter for block device discovery (exclude)</label>
                        <description>Regex string to exclude discovered block device.</description>
                    </config>
                </macro>
                <macro>
                    <macro>{$VFS.DEV.READ.AWAIT.WARN}</macro>
                    <value>20</value>
                    <description>The average response time (in ms) of disk read before the trigger fires.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>15</priority>
                        <section_name>Thresholds</section_name>
                        <label>The average read time (in ms)</label>
                        <description>Average response time (in ms) of disk read before the trigger fires. No less than 0.</description>
                        <regex>^-?([0-9]+|(([0-9]+)\.([0-9]+)))$</regex>
                    </config>
                </macro>
                <macro>
                    <macro>{$VFS.DEV.WRITE.AWAIT.WARN}</macro>
                    <value>20</value>
                    <description>The average response time (in ms) of disk write before the trigger fires.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>16</priority>
                        <section_name>Thresholds</section_name>
                        <label>The average write time (in ms)</label>
                        <description>Average response time (in ms) of disk write before the trigger fires. No less than 0.</description>
                        <regex>^-?([0-9]+|(([0-9]+)\.([0-9]+)))$</regex>
                    </config>
                </macro>
                <macro>
                    <macro>{$VFS.FS.FSNAME.MATCHES}</macro>
                    <value>.+</value>
                    <description>Used for filesystem discovery. Can be overridden on the host or linked template level.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>8</priority>
                        <section_name>Filters</section_name>
                        <label>Filter filesystem by name</label>
                        <description>Regex string to include discovered filesystem by name.</description>
                    </config>
                </macro>
                <macro>
                    <macro>{$VFS.FS.FSNAME.NOT_MATCHES}</macro>
                    <value>^(/dev|/sys|/run|/proc|.+/shm$)</value>
                    <description>Used for filesystem discovery. Can be overridden on the host or linked template level.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>9</priority>
                        <section_name>Filters</section_name>
                        <label>Filter filesystem by name (exclude)</label>
                        <description>Regex string to exclude discovered filesystem by name.</description>
                    </config>
                </macro>
                <macro>
                    <macro>{$VFS.FS.FSTYPE.MATCHES}</macro>
                    <value>^(btrfs|ext2|ext3|ext4|reiser|xfs|ffs|ufs|jfs|jfs2|vxfs|hfs|apfs|refs|ntfs|fat32|zfs)$</value>
                    <description>Used for filesystem discovery. Can be overridden on the host or linked template level.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>10</priority>
                        <section_name>Filters</section_name>
                        <label>Filter filesystem by type</label>
                        <description>Regex string to include discovered filesystem by type.</description>
                    </config>
                </macro>
                <macro>
                    <macro>{$VFS.FS.FSTYPE.NOT_MATCHES}</macro>
                    <value>^\s$</value>
                    <description>Used for filesystem discovery. Can be overridden on the host or linked template level.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>11</priority>
                        <section_name>Filters</section_name>
                        <label>Filter filesystem by name (exclude)</label>
                        <description>Regex string to exclude discovered filesystem by type.</description>
                    </config>
                </macro>
                <macro>
                    <macro>{$VFS.FS.INODE.PFREE.MIN.CRIT}</macro>
                    <value>10</value>
                    <description>The critical threshold of the filesystem metadata utilization.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>7</priority>
                        <section_name>Thresholds</section_name>
                        <label>Threshold of the filesystem metadata utilization (critical)</label>
                        <description>Critical threshold of the filesystem metadata utilization. In the range from 0 to 100 inclusive.</description>
                        <regex>^-?([0-9]+|(([0-9]+)\.([0-9]+)))$</regex>
                    </config>
                </macro>
                <macro>
                    <macro>{$VFS.FS.INODE.PFREE.MIN.WARN}</macro>
                    <value>20</value>
                    <description>The warning threshold of the filesystem metadata utilization.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>6</priority>
                        <section_name>Thresholds</section_name>
                        <label>Threshold of the filesystem metadata utilization</label>
                        <description>Warning threshold of the filesystem metadata utilization. In the range from 0 to 100 inclusive.</description>
                        <regex>^-?([0-9]+|(([0-9]+)\.([0-9]+)))$</regex>
                    </config>
                </macro>
                <macro>
                    <macro>{$VFS.FS.PUSED.MAX.CRIT}</macro>
                    <value>90</value>
                    <description>The critical threshold of the filesystem utilization.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>5</priority>
                        <section_name>Thresholds</section_name>
                        <label>Threshold of the filesystem utilization (critical)</label>
                        <description>Critical threshold of the filesystem utilization. In the range from 0 to 100 inclusive.</description>
                        <regex>^-?([0-9]+|(([0-9]+)\.([0-9]+)))$</regex>
                    </config>
                </macro>
                <macro>
                    <macro>{$VFS.FS.PUSED.MAX.WARN}</macro>
                    <value>80</value>
                    <description>The warning threshold of the filesystem utilization.</description>
                    <config>
                        <type>TEXT</type>
                        <priority>4</priority>
                        <section_name>Thresholds</section_name>
                        <label>Threshold of the filesystem utilization</label>
                        <description>Warning threshold of the filesystem utilization. In the range from 0 to 100 inclusive.</description>
                        <regex>^-?([0-9]+|(([0-9]+)\.([0-9]+)))$</regex>
                    </config>
                </macro>
            </macros>
            <dashboards>
                <dashboard>
                    <uuid>ede5f5d7e3fa4e0291efad7c29f3de50</uuid>
                    <name>Filesystems</name>
                    <pages>
                        <page>
                            <name>Overview</name>
                            <widgets>
                                <widget>
                                    <type>graphprototype</type>
                                    <width>72</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>3</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>Template Linux Container</host>
                                                <name>FS [{#FSTYPE}({#FSNAME})]: Space utilization chart (relative to total)</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAEB</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graphprototype</type>
                                    <y>5</y>
                                    <width>72</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>1</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>Template Linux Container</host>
                                                <name>FS [{#FSTYPE}({#FSNAME})]: Space usage graph, in % (relative to max available)</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAEC</value>
                                        </field>
                                    </fields>
                                </widget>
                            </widgets>
                        </page>
                    </pages>
                </dashboard>
                <dashboard>
                    <uuid>0919b801b94d4ea8ae97bf639127a7f4</uuid>
                    <name>Network interfaces</name>
                    <pages>
                        <page>
                            <name>Overview</name>
                            <widgets>
                                <widget>
                                    <type>graphprototype</type>
                                    <width>72</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>1</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>Template Linux Container</host>
                                                <name>Interface {#IFNAME}: Network traffic</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAJ</value>
                                        </field>
                                    </fields>
                                </widget>
                            </widgets>
                        </page>
                    </pages>
                </dashboard>
                <dashboard>
                    <uuid>8ecac403d0d24f99ad59001c328707a4</uuid>
                    <name>System performance</name>
                    <pages>
                        <page>
                            <widgets>
                                <widget>
                                    <type>graph</type>
                                    <width>36</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>GRAPH</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>Template Linux Container</host>
                                                <name>Linux: System load</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAA</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graph</type>
                                    <y>5</y>
                                    <width>36</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>GRAPH</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>Template Linux Container</host>
                                                <name>Linux: Memory usage</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAC</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graphprototype</type>
                                    <y>10</y>
                                    <width>72</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>3</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>Template Linux Container</host>
                                                <name>FS [{#FSTYPE}({#FSNAME})]: Space utilization chart (relative to total)</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAEA</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graphprototype</type>
                                    <y>15</y>
                                    <width>72</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>1</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>Template Linux Container</host>
                                                <name>{#DEVNAME}: Disk read/write rates</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAF</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graphprototype</type>
                                    <y>20</y>
                                    <width>72</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>1</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>Template Linux Container</host>
                                                <name>{#DEVNAME}: Disk average waiting time</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAG</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graphprototype</type>
                                    <y>25</y>
                                    <width>72</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>1</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>Template Linux Container</host>
                                                <name>{#DEVNAME}: Disk utilization and queue</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAH</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graphprototype</type>
                                    <y>30</y>
                                    <width>72</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>1</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>Template Linux Container</host>
                                                <name>Interface {#IFNAME}: Network traffic</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAI</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graph</type>
                                    <x>36</x>
                                    <width>36</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>GRAPH</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>Template Linux Container</host>
                                                <name>Linux: CPU usage</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAB</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graph</type>
                                    <x>36</x>
                                    <y>5</y>
                                    <width>36</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>GRAPH</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>Template Linux Container</host>
                                                <name>Linux: Swap usage</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAD</value>
                                        </field>
                                    </fields>
                                </widget>
                            </widgets>
                        </page>
                    </pages>
                </dashboard>
            </dashboards>
            <valuemaps>
                <valuemap>
                    <uuid>70a1c9661db24cb895ba53e51e0410cd</uuid>
                    <name>ifOperStatus</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>unknown</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>notpresent</newvalue>
                        </mapping>
                        <mapping>
                            <value>2</value>
                            <newvalue>down</newvalue>
                        </mapping>
                        <mapping>
                            <value>3</value>
                            <newvalue>lowerlayerdown</newvalue>
                        </mapping>
                        <mapping>
                            <value>4</value>
                            <newvalue>testing</newvalue>
                        </mapping>
                        <mapping>
                            <value>5</value>
                            <newvalue>dormant</newvalue>
                        </mapping>
                        <mapping>
                            <value>6</value>
                            <newvalue>up</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
                <valuemap>
                    <uuid>369d28ed947b4a78b69472cd0be9e343</uuid>
                    <name>Linux::Interface protocol types</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>from KA9Q: NET/ROM pseudo</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>Ethernet</newvalue>
                        </mapping>
                        <mapping>
                            <value>2</value>
                            <newvalue>Experimental Ethernet</newvalue>
                        </mapping>
                        <mapping>
                            <value>3</value>
                            <newvalue>AX.25 Level 2</newvalue>
                        </mapping>
                        <mapping>
                            <value>4</value>
                            <newvalue>PROnet token ring</newvalue>
                        </mapping>
                        <mapping>
                            <value>5</value>
                            <newvalue>Chaosnet</newvalue>
                        </mapping>
                        <mapping>
                            <value>6</value>
                            <newvalue>IEEE 802.2 Ethernet/TR/TB</newvalue>
                        </mapping>
                        <mapping>
                            <value>7</value>
                            <newvalue>ARCnet</newvalue>
                        </mapping>
                        <mapping>
                            <value>8</value>
                            <newvalue>APPLEtalk</newvalue>
                        </mapping>
                        <mapping>
                            <value>15</value>
                            <newvalue>Frame Relay DLCI</newvalue>
                        </mapping>
                        <mapping>
                            <value>19</value>
                            <newvalue>ATM</newvalue>
                        </mapping>
                        <mapping>
                            <value>23</value>
                            <newvalue>Metricom STRIP (new IANA id)</newvalue>
                        </mapping>
                        <mapping>
                            <value>24</value>
                            <newvalue>IEEE 1394 IPv4 - RFC 2734</newvalue>
                        </mapping>
                        <mapping>
                            <value>27</value>
                            <newvalue>EUI-64</newvalue>
                        </mapping>
                        <mapping>
                            <value>32</value>
                            <newvalue>InfiniBand</newvalue>
                        </mapping>
                        <mapping>
                            <value>256</value>
                            <newvalue>ARPHRD_SLIP</newvalue>
                        </mapping>
                        <mapping>
                            <value>257</value>
                            <newvalue>ARPHRD_CSLIP</newvalue>
                        </mapping>
                        <mapping>
                            <value>258</value>
                            <newvalue>ARPHRD_SLIP6</newvalue>
                        </mapping>
                        <mapping>
                            <value>259</value>
                            <newvalue>ARPHRD_CSLIP6</newvalue>
                        </mapping>
                        <mapping>
                            <value>260</value>
                            <newvalue>Notional KISS type</newvalue>
                        </mapping>
                        <mapping>
                            <value>264</value>
                            <newvalue>ARPHRD_ADAPT</newvalue>
                        </mapping>
                        <mapping>
                            <value>270</value>
                            <newvalue>ARPHRD_ROSE</newvalue>
                        </mapping>
                        <mapping>
                            <value>271</value>
                            <newvalue>CCITT X.25</newvalue>
                        </mapping>
                        <mapping>
                            <value>272</value>
                            <newvalue>Boards with X.25 in firmware</newvalue>
                        </mapping>
                        <mapping>
                            <value>280</value>
                            <newvalue>Controller Area Network</newvalue>
                        </mapping>
                        <mapping>
                            <value>512</value>
                            <newvalue>ARPHRD_PPP</newvalue>
                        </mapping>
                        <mapping>
                            <value>513</value>
                            <newvalue>Cisco HDLC</newvalue>
                        </mapping>
                        <mapping>
                            <value>516</value>
                            <newvalue>LAPB</newvalue>
                        </mapping>
                        <mapping>
                            <value>517</value>
                            <newvalue>Digital's DDCMP protocol</newvalue>
                        </mapping>
                        <mapping>
                            <value>518</value>
                            <newvalue>Raw HDLC</newvalue>
                        </mapping>
                        <mapping>
                            <value>519</value>
                            <newvalue>Raw IP</newvalue>
                        </mapping>
                        <mapping>
                            <value>768</value>
                            <newvalue>IPIP tunnel</newvalue>
                        </mapping>
                        <mapping>
                            <value>769</value>
                            <newvalue>IP6IP6 tunnel</newvalue>
                        </mapping>
                        <mapping>
                            <value>770</value>
                            <newvalue>Frame Relay Access Device</newvalue>
                        </mapping>
                        <mapping>
                            <value>771</value>
                            <newvalue>SKIP vif</newvalue>
                        </mapping>
                        <mapping>
                            <value>772</value>
                            <newvalue>Loopback device</newvalue>
                        </mapping>
                        <mapping>
                            <value>773</value>
                            <newvalue>Localtalk device</newvalue>
                        </mapping>
                        <mapping>
                            <value>774</value>
                            <newvalue>Fiber Distributed Data Interface</newvalue>
                        </mapping>
                        <mapping>
                            <value>775</value>
                            <newvalue>AP1000 BIF</newvalue>
                        </mapping>
                        <mapping>
                            <value>776</value>
                            <newvalue>sit0 device - IPv6-in-IPv4</newvalue>
                        </mapping>
                        <mapping>
                            <value>777</value>
                            <newvalue>IP over DDP tunneller</newvalue>
                        </mapping>
                        <mapping>
                            <value>778</value>
                            <newvalue>GRE over IP</newvalue>
                        </mapping>
                        <mapping>
                            <value>779</value>
                            <newvalue>PIMSM register interface</newvalue>
                        </mapping>
                        <mapping>
                            <value>780</value>
                            <newvalue>High Performance Parallel Interface</newvalue>
                        </mapping>
                        <mapping>
                            <value>781</value>
                            <newvalue>Nexus 64Mbps Ash</newvalue>
                        </mapping>
                        <mapping>
                            <value>782</value>
                            <newvalue>Acorn Econet</newvalue>
                        </mapping>
                        <mapping>
                            <value>783</value>
                            <newvalue>Linux-IrDA</newvalue>
                        </mapping>
                        <mapping>
                            <value>784</value>
                            <newvalue>Point to point fibrechannel</newvalue>
                        </mapping>
                        <mapping>
                            <value>785</value>
                            <newvalue>Fibrechannel arbitrated loop</newvalue>
                        </mapping>
                        <mapping>
                            <value>786</value>
                            <newvalue>Fibrechannel public loop</newvalue>
                        </mapping>
                        <mapping>
                            <value>787</value>
                            <newvalue>Fibrechannel fabric</newvalue>
                        </mapping>
                        <mapping>
                            <value>800</value>
                            <newvalue>Magic type ident for TR</newvalue>
                        </mapping>
                        <mapping>
                            <value>801</value>
                            <newvalue>IEEE 802.11</newvalue>
                        </mapping>
                        <mapping>
                            <value>802</value>
                            <newvalue>IEEE 802.11 + Prism2 header</newvalue>
                        </mapping>
                        <mapping>
                            <value>803</value>
                            <newvalue>IEEE 802.11 + radiotap header</newvalue>
                        </mapping>
                        <mapping>
                            <value>804</value>
                            <newvalue>ARPHRD_IEEE802154</newvalue>
                        </mapping>
                        <mapping>
                            <value>805</value>
                            <newvalue>IEEE 802.15.4 network monitor</newvalue>
                        </mapping>
                        <mapping>
                            <value>820</value>
                            <newvalue>PhoNet media type</newvalue>
                        </mapping>
                        <mapping>
                            <value>821</value>
                            <newvalue>PhoNet pipe header</newvalue>
                        </mapping>
                        <mapping>
                            <value>822</value>
                            <newvalue>CAIF media type</newvalue>
                        </mapping>
                        <mapping>
                            <value>823</value>
                            <newvalue>GRE over IPv6</newvalue>
                        </mapping>
                        <mapping>
                            <value>824</value>
                            <newvalue>Netlink header</newvalue>
                        </mapping>
                        <mapping>
                            <value>825</value>
                            <newvalue>IPv6 over LoWPAN</newvalue>
                        </mapping>
                        <mapping>
                            <value>826</value>
                            <newvalue>Vsock monitor header</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
                <valuemap>
                    <uuid>7fa8940b7d81463d9909388d80b2a122</uuid>
                    <name>zabbix.host.available</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>not available</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>available</newvalue>
                        </mapping>
                        <mapping>
                            <value>2</value>
                            <newvalue>unknown</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
                <valuemap>
                    <uuid>1ca6216d080a4c59a540895880dabb38</uuid>
                    <name>Zabbix agent ping status</name>
                    <mappings>
                        <mapping>
                            <value>1</value>
                            <newvalue>Up</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
            </valuemaps>
        </template>
    </templates>
    <triggers>
        <trigger>
            <uuid>de64c33c244d4bf888934c5e95bf22cc</uuid>
            <expression>last(/Template Linux Container/proc.num)/last(/Template Linux Container/kernel.maxproc)*100&gt;80</expression>
            <name>Linux: Getting closer to process limit</name>
            <event_name>Linux: Getting closer to process limit (over 80% used)</event_name>
            <opdata>{ITEM.LASTVALUE1} active, {ITEM.LASTVALUE2} limit.</opdata>
            <priority>WARNING</priority>
            <tags>
                <tag>
                    <tag>scope</tag>
                    <value>performance</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <uuid>889cc1538e044209ba0a857a599c1420</uuid>
            <expression>max(/Template Linux Container/ct.swap.size[pfree],5m)&lt;{$SWAP.PFREE.MIN.WARN} and last(/Template Linux Container/ct.swap.size[total])&gt;0</expression>
            <name>Linux: High swap space usage</name>
            <event_name>Linux: High swap space usage (less than {$SWAP.PFREE.MIN.WARN}% free)</event_name>
            <opdata>Free: {ITEM.LASTVALUE1}, total: {ITEM.LASTVALUE2}</opdata>
            <priority>WARNING</priority>
            <description>If there is no swap configured, this trigger is ignored.</description>
            <dependencies>
                <dependency>
                    <name>Linux: High memory utilization</name>
                    <expression>min(/Template Linux Container/ct.memory.size[pused],5m)&gt;{$MEMORY.UTIL.MAX}</expression>
                </dependency>
                <dependency>
                    <name>Linux: Lack of available memory</name>
                    <expression>max(/Template Linux Container/ct.memory.size[available],5m)&lt;{$MEMORY.AVAILABLE.MIN} and last(/Template Linux Container/ct.memory.size[total])&gt;0</expression>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>scope</tag>
                    <value>capacity</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <uuid>20c28051549643fe9b24efe51c5e064a</uuid>
            <expression>max(/Template Linux Container/ct.memory.size[available],5m)&lt;{$MEMORY.AVAILABLE.MIN} and last(/Template Linux Container/ct.memory.size[total])&gt;0</expression>
            <name>Linux: Lack of available memory</name>
            <event_name>Linux: Lack of available memory (&lt;{$MEMORY.AVAILABLE.MIN} of {ITEM.VALUE2})</event_name>
            <opdata>Available: {ITEM.LASTVALUE1}, total: {ITEM.LASTVALUE2}</opdata>
            <priority>AVERAGE</priority>
            <description>The system is running out of memory.</description>
            <tags>
                <tag>
                    <tag>scope</tag>
                    <value>capacity</value>
                </tag>
                <tag>
                    <tag>scope</tag>
                    <value>performance</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <uuid>faf1f18ac23f4a1d84f336215af174c2</uuid>
            <expression>min(/Template Linux Container/ct.cpu.load[all,avg1],5m)/last(/Template Linux Container/system.cpu.num)&gt;{$LOAD_AVG_PER_CPU.MAX.WARN}
and last(/Template Linux Container/ct.cpu.load[all,avg5])&gt;0
and last(/Template Linux Container/ct.cpu.load[all,avg15])&gt;0</expression>
            <name>Linux: Load average is too high</name>
            <event_name>Linux: Load average is too high (per CPU load over {$LOAD_AVG_PER_CPU.MAX.WARN} for 5m)</event_name>
            <opdata>Load averages(1m 5m 15m): ({ITEM.LASTVALUE1} {ITEM.LASTVALUE3} {ITEM.LASTVALUE4}), # of CPUs: {ITEM.LASTVALUE2}</opdata>
            <priority>AVERAGE</priority>
            <description>The load average per CPU is too high. The system may be slow to respond.</description>
            <tags>
                <tag>
                    <tag>scope</tag>
                    <value>capacity</value>
                </tag>
                <tag>
                    <tag>scope</tag>
                    <value>performance</value>
                </tag>
            </tags>
        </trigger>
    </triggers>
    <graphs>
        <graph>
            <uuid>84f585732d6f4ede8fe77155608e1d8c</uuid>
            <name>Linux: CPU jumps</name>
            <graph_items>
                <graph_item>
                    <color>199C0D</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>system.cpu.switches</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>system.cpu.intr</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <uuid>939b130d0bb648e4a404d190162216c0</uuid>
            <name>Linux: CPU usage</name>
            <type>STACKED</type>
            <ymin_type_1>FIXED</ymin_type_1>
            <ymax_type_1>FIXED</ymax_type_1>
            <graph_items>
                <graph_item>
                    <color>199C0D</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>system.cpu.util[,system]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>system.cpu.util[,user]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>00611C</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>system.cpu.util[,nice]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>F7941D</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>system.cpu.util[,iowait]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <color>FC6EA3</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>system.cpu.util[,steal]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <color>6C59DC</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>system.cpu.util[,interrupt]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>6</sortorder>
                    <color>C7A72D</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>system.cpu.util[,softirq]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>7</sortorder>
                    <color>BA2A5D</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>system.cpu.util[,guest]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>8</sortorder>
                    <color>F230E0</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>system.cpu.util[,guest_nice]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <uuid>d52ce98337214219af650b13d6198ea7</uuid>
            <name>Linux: CPU utilization</name>
            <ymin_type_1>FIXED</ymin_type_1>
            <ymax_type_1>FIXED</ymax_type_1>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>199C0D</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>system.cpu.util</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <uuid>2bbacdc99ca344a6a8905c42c2349d99</uuid>
            <name>Linux: Memory usage</name>
            <ymin_type_1>FIXED</ymin_type_1>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>199C0D</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>ct.memory.size[total]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>F63100</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>ct.memory.size[available]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <uuid>0c7b74e40cfd40f380b4bf1ede54c19d</uuid>
            <name>Linux: Memory utilization</name>
            <ymin_type_1>FIXED</ymin_type_1>
            <ymax_type_1>FIXED</ymax_type_1>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>199C0D</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>ct.memory.size[pused]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <uuid>ec3587bc4e0248ae8cae1ec703acb8e7</uuid>
            <name>Linux: Processes</name>
            <graph_items>
                <graph_item>
                    <color>199C0D</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>proc.num</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>proc.num[,,run]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <uuid>1b7ba0a89edc4c68a8ceec077388ccd1</uuid>
            <name>Linux: Swap usage</name>
            <graph_items>
                <graph_item>
                    <color>199C0D</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>ct.swap.size</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>ct.swap.size[total]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <uuid>b5ea0c742744486197668daa35247738</uuid>
            <name>Linux: System load</name>
            <ymin_type_1>FIXED</ymin_type_1>
            <graph_items>
                <graph_item>
                    <color>199C0D</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>ct.cpu.load[all,avg1]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>ct.cpu.load[all,avg5]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>00611C</color>
                    <item>
                        <host>Template Linux Container</host>
                        <key>ct.cpu.load[all,avg15]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>F7941D</color>
                    <yaxisside>RIGHT</yaxisside>
                    <item>
                        <host>Template Linux Container</host>
                        <key>system.cpu.num</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
</zabbix_export>
